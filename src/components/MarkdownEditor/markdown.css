.prose {
  color: var(--tw-prose-body);
  padding: 0;
  text-align: inherit;
}

.prose :where(p):not(:where([class~='not-prose'] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where([class~='lead']):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.prose :where(a):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}

.prose :where(strong):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.prose :where(a strong):not(:where([class~='not-prose'] *)) {
  color: inherit;
}

.prose :where(blockquote strong):not(:where([class~='not-prose'] *)) {
  color: inherit;
}

.prose :where(thead th strong):not(:where([class~='not-prose'] *)) {
  color: inherit;
}

.prose :where(ol):not(:where([class~='not-prose'] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.prose :where(ol[type='A']):not(:where([class~='not-prose'] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type='a']):not(:where([class~='not-prose'] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type='A s']):not(:where([class~='not-prose'] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type='a s']):not(:where([class~='not-prose'] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type='I']):not(:where([class~='not-prose'] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type='i']):not(:where([class~='not-prose'] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type='I s']):not(:where([class~='not-prose'] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type='i s']):not(:where([class~='not-prose'] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type='1']):not(:where([class~='not-prose'] *)) {
  list-style-type: decimal;
}

.prose :where(ul):not(:where([class~='not-prose'] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.prose :where(ol > li):not(:where([class~='not-prose'] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.prose :where(ul > li):not(:where([class~='not-prose'] *))::marker {
  color: var(--tw-prose-bullets);
}

.prose :where(hr):not(:where([class~='not-prose'] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.prose :where(blockquote):not(:where([class~='not-prose'] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-left-width: 0.25rem;
  border-left-color: var(--tw-prose-quote-borders);
  quotes: '\201C''\201D''\2018''\2019';
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}

.prose :where(blockquote p:first-of-type):not(:where([class~='not-prose'] *)):before {
  content: open-quote;
}

.prose :where(blockquote p:last-of-type):not(:where([class~='not-prose'] *)):after {
  content: close-quote;
}

.prose :where(h1):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.prose :where(h1 strong):not(:where([class~='not-prose'] *)) {
  font-weight: 900;
  color: inherit;
}

.prose :where(h2):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.prose :where(h2 strong):not(:where([class~='not-prose'] *)) {
  font-weight: 800;
  color: inherit;
}

.prose :where(h3):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.prose :where(h3 strong):not(:where([class~='not-prose'] *)) {
  font-weight: 700;
  color: inherit;
}

.prose :where(h4):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.prose :where(h4 strong):not(:where([class~='not-prose'] *)) {
  font-weight: 700;
  color: inherit;
}

.prose :where(img):not(:where([class~='not-prose'] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(figure > *):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose :where(figcaption):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.prose :where(code):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}

.prose :where(code):not(:where([class~='not-prose'] *)):before {
  content: '`';
}

.prose :where(code):not(:where([class~='not-prose'] *)):after {
  content: '`';
}

.prose :where(a code):not(:where([class~='not-prose'] *)) {
  color: inherit;
}

.prose :where(h1 code):not(:where([class~='not-prose'] *)) {
  color: inherit;
}

.prose :where(h2 code):not(:where([class~='not-prose'] *)) {
  color: inherit;
  font-size: 0.875em;
}

.prose :where(h3 code):not(:where([class~='not-prose'] *)) {
  color: inherit;
  font-size: 0.9em;
}

.prose :where(h4 code):not(:where([class~='not-prose'] *)) {
  color: inherit;
}

.prose :where(blockquote code):not(:where([class~='not-prose'] *)) {
  color: inherit;
}

.prose :where(thead th code):not(:where([class~='not-prose'] *)) {
  color: inherit;
}

.prose :where(pre):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding: 0.8571429em 1.1428571em;
}

.prose :where(pre code):not(:where([class~='not-prose'] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.prose :where(pre code):not(:where([class~='not-prose'] *)):before {
  content: none;
}

.prose :where(pre code):not(:where([class~='not-prose'] *)):after {
  content: none;
}

.prose :where(table):not(:where([class~='not-prose'] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.prose :where(thead):not(:where([class~='not-prose'] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.prose :where(thead th):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.prose :where(tbody tr):not(:where([class~='not-prose'] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.prose :where(tbody tr:last-child):not(:where([class~='not-prose'] *)) {
  border-bottom-width: 0;
}

.prose :where(tbody td):not(:where([class~='not-prose'] *)) {
  vertical-align: baseline;
}

.prose :where(tfoot):not(:where([class~='not-prose'] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}

.prose :where(tfoot td):not(:where([class~='not-prose'] *)) {
  vertical-align: top;
}

.prose {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgba(0, 0, 0, 0.5);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

.prose :where(video):not(:where([class~='not-prose'] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(figure):not(:where([class~='not-prose'] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(li):not(:where([class~='not-prose'] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.prose :where(ol > li):not(:where([class~='not-prose'] *)) {
  padding-left: 0.375em;
}

.prose :where(ul > li):not(:where([class~='not-prose'] *)) {
  padding-left: 0.375em;
}

.prose :where(.prose > ul > li p):not(:where([class~='not-prose'] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(.prose > ul > li > :first-child):not(:where([class~='not-prose'] *)) {
  margin-top: 1.25em;
}

.prose :where(.prose > ul > li > :last-child):not(:where([class~='not-prose'] *)) {
  margin-bottom: 1.25em;
}

.prose :where(.prose > ol > li > :first-child):not(:where([class~='not-prose'] *)) {
  margin-top: 1.25em;
}

.prose :where(.prose > ol > li > :last-child):not(:where([class~='not-prose'] *)) {
  margin-bottom: 1.25em;
}

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~='not-prose'] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(hr + *):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
}

.prose :where(h2 + *):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
}

.prose :where(h3 + *):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
}

.prose :where(h4 + *):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
}

.prose :where(thead th:first-child):not(:where([class~='not-prose'] *)) {
  padding-left: 0;
}

.prose :where(thead th:last-child):not(:where([class~='not-prose'] *)) {
  padding-right: 0;
}

.prose :where(tbody td, tfoot td):not(:where([class~='not-prose'] *)) {
  padding: 0.5714286em;
}

.prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~='not-prose'] *)) {
  padding-left: 0;
}

.prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~='not-prose'] *)) {
  padding-right: 0;
}

.prose :where(.prose > :first-child):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
}

.prose :where(.prose > :last-child):not(:where([class~='not-prose'] *)) {
  margin-bottom: 0;
}

.my-line-highlight span.token {
  --tw-bg-opacity: 1;
  background-color: hsl(207 11.1% 85.9% / var(--tw-bg-opacity));
}

.prose {
  min-width: 0;
}

.prose code {
  --tw-bg-opacity: 1;
  background-color: hsl(210 16.7% 97.6% / var(--tw-bg-opacity));
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  --tw-text-opacity: 1;
  color: hsl(322 75% 46% / var(--tw-text-opacity));
}

.prose code:after,
.prose code:before {
  content: none;
}

.prose a,
.prose code:after,
.prose code:before {
  --tw-text-opacity: 1;
  color: hsl(211 100% 43.2% / var(--tw-text-opacity));
}

.prose a {
  text-decoration: none;
}

.prose code[data-lexical-text] {
  font-family: var(--font-ibm-plex-mono);
  font-size: inherit;
  font-weight: inherit;
}

.prose code[data-lexical-text]:after,
.prose code[data-lexical-text]:before {
  content: none;
}

.prose [data-lexical-decorator] > table {
  table-layout: fixed;
}

.prose [data-lexical-decorator] > table td {
  vertical-align: middle;
}

.prose [data-lexical-decorator] > table > tbody > tr,
.prose [data-lexical-decorator] > table > tfoot,
.prose [data-lexical-decorator] > table > thead {
  border: 0;
}

.prose [data-lexical-decorator] > table [data-tool-cell] {
  padding: 1px;
  border: 0;
  line-height: 1rem;
  vertical-align: middle;
}

.prose [data-lexical-decorator] > table > thead [data-tool-cell]:first-child {
  vertical-align: middle;
}

.prose pre[class*='language-'] {
  overflow-x: auto;
}

.prose code[class*='language-'],
.prose pre[class*='language-'] {
  font-family: var(--font-ibm-plex-mono);
  font-size: inherit;
}

.prose pre[class*='language-'] > code {
  font-size: 0.875rem;
  line-height: 1.25rem;
  display: block;
}

.prose [data-editor-type='frontmatter'] table {
  margin: 0;
  font-size: inherit;
  width: auto;
}

.prose [data-editor-type='frontmatter'] table tbody,
.prose [data-editor-type='frontmatter'] table tfoot,
.prose [data-editor-type='frontmatter'] table thead,
.prose [data-editor-type='frontmatter'] table tr {
  border: 0;
}

.api-ref-nav > a {
  margin-bottom: 0.75rem;
  display: block;
}

.api-ref-nav > dl > dd > dl {
  padding-left: 0.5rem;
}

.api-ref-nav dd dd {
  margin-bottom: 0.5rem;
}

.api-ref-nav > dl > dt {
  font-weight: 500;
}

.in-page-nav {
  position: sticky;
  top: 0.5rem;
  width: 12rem;
  --tw-border-opacity: 1;
  border-left: 2px hsl(206 100% 50% / var(--tw-border-opacity));
  border-style: dotted;
  padding-left: 1rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.in-page-nav p {
  margin-bottom: 0.5rem;
}

.in-page-nav li ul {
  padding-left: 0.5rem;
}

.in-page-nav li > a {
  margin-bottom: 0.25rem;
  display: block;
  --tw-text-opacity: 1;
  color: hsl(206 6% 43.5% / var(--tw-text-opacity));
}

.doc-nav a:hover,
.doc-nav a[data-current='true'] {
  --tw-text-opacity: 1;
  color: hsl(211 100% 43.2% / var(--tw-text-opacity));
}

.doc-nav a[data-current='true'] {
  cursor: default;
}

h2#classes + table td:first-child,
h2#classes + table tr:first-child,
h2#functions + table td:first-child,
h2#functions + table tr:first-child,
h2#interfaces + table td:first-child,
h2#interfaces + table tr:first-child,
h2#type-aliases + table td:first-child,
h2#type-aliases + table tr:first-child {
  width: 50%;
}

.feature-overview-popover a {
  --tw-text-opacity: 1;
  color: hsl(211 100% 43.2% / var(--tw-text-opacity));
}

.feature-overview-popover a svg {
  display: inline;
}

.feature-overview-popover p {
  margin-bottom: 1rem;
}

.mdxeditor-toolbar {
  padding: 0 !important;
  position: relative;
  z-index: auto;
}
